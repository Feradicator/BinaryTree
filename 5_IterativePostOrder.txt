/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        Stack<TreeNode>st=new Stack<>();
        List<Integer>lst=new ArrayList<>();
        st.push(root);
        while(!st.isEmpty())
        {
            TreeNode node=st.pop();
            if(node!=null && node.left!=null)
            st.push(node.left);
            if(node!=null && node.right!=null)
            st.push(node.right);
            if(node!=null)
            lst.add(node.val);

        }
        Collections.reverse(lst);
        return lst;
        
    }
}